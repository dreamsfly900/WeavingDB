<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Weave.Server</name>
    </assembly>
    <members>
        <member name="T:Weave.Server.DataFrame">
            <summary>
            数据帧 ？？类，定义了header，三个1位（ _extend，_mask，_content） byte 
            </summary>
        </member>
        <member name="T:Weave.Server.DataFrameHeader">
            <summary>
            数据帧头 定义????
            </summary>
        </member>
        <member name="M:Weave.Server.DataFrameHeader.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.SByte,System.Boolean,System.Int32)">
            <summary>
            发送封装数据
            </summary>
            <param name="fin"></param>
            <param name="rsv1"></param>
            <param name="rsv2"></param>
            <param name="rsv3"></param>
            <param name="opcode"></param>
            <param name="hasmask"></param>
            <param name="length"></param>
        </member>
        <member name="M:Weave.Server.DataFrameHeader.GetBytes">
            <summary>
            返回帧头字节
            </summary>
            <returns>返回帧头字节</returns>
        </member>
        <member name="T:Weave.Server.HttpProcessor">
            <summary>
            连接到HTTP服务器的客户端封装类，，，用于处理数据，，
            </summary>
        </member>
        <member name="T:Weave.Server.HttpServer">
            <summary>
            HTTP服务器类，继承自IWeaveTcpBase接口
            </summary>
        </member>
        <member name="M:Weave.Server.HttpServer.HandleGETRequest(Weave.Server.HttpProcessor)">
            <summary>
            处理Get请求的方法，是一个虚方法，写有具体的代码的
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:Weave.Server.HttpServer.HandlePOSTRequest(Weave.Server.HttpProcessor,System.IO.StreamReader)">
            <summary>
            处理Post请求的方法，是一个虚方法，写有具体的代码的
            </summary>
            <param name="p"></param>
            <param name="inputData"></param>
        </member>
        <member name="M:Weave.Server.HttpServer.getdata(Weave.Server.HttpProcessor,System.Byte,System.String)">
            <summary>
            是否获取到了数据的方法，，从某个HttpProcessor连接里面获取数据，根据命令command
            </summary>
            <param name="p"></param>
            <param name="command"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Weave.Server.WeaveP2Server">
            <summary>
            继承自Weava.Base里面的WeaveBaseServer类的方法，它原始继承自IWeaveTcpBase接口
            </summary>
        </member>
        <member name="M:Weave.Server.WeaveP2Server.#ctor">
            <summary>
            没有传递参数，那么默认是new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            </summary>
        </member>
        <member name="M:Weave.Server.WeaveP2Server.#ctor(System.String)">
            <summary>
            传递了loaclip参数，new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            </summary>
            <param name="_loaclip">不知道干嘛用的，好像没有用到，估计是预留字段</param>
        </member>
        <member name="M:Weave.Server.WeaveP2Server.#ctor(Weave.Base.WeaveDataTypeEnum)">
            <summary>
            传递了weaveDataType枚举类型，那么是new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);定义了基类的weaveDataType类型
            </summary>
            <param name="weaveDataType"></param>
        </member>
        <member name="T:Weave.Server.WeaveUDPServer">
            <summary>
            UPD服务器类
            </summary>
        </member>
        <member name="T:Weave.Server.WeaveWebServer">
            <summary>
            继承自IWeaveTcpBase接口的HTTP Web服务器
            </summary>
        </member>
        <member name="M:Weave.Server.WeaveWebServer.packageDatajson(System.Byte[],System.Net.Sockets.Socket,System.Net.Security.SslStream)">
            <summary>
            对粘包，分包的处理方法
            </summary>
            <param name="alldata"></param>
            <param name="soc"></param>
            <param name="obj"></param>
        </member>
    </members>
</doc>
